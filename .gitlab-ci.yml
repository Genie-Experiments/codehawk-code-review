stages:
  - review

variables:
  GIT_STRATEGY: clone


review:
  stage: review
  image: docker:stable

  services:
    - docker:dind
  
  before_script:
    - apk add --no-cache curl jq

  script:
    - |
      if [ "$CI_PIPELINE_SOURCE" = "merge_request_event" ] || [ "$CI_PIPELINE_SOURCE" = "push" ]; then
        echo "Handling review job..."

        MR_DETAILS=$(curl --silent --header "PRIVATE-TOKEN: glpat-ZekGy3vsLDzfsWTdFzKE" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}")
        echo "MR_DETAILS: $MR_DETAILS"

        MR_LABELS=$(echo "$MR_DETAILS" | jq -r '.labels | .[]')
        echo "Labels: $MR_LABELS"

        if echo "$MR_LABELS" | grep -qw "review"; then
          echo "Review label found, running review job..."

          docker pull arshikjaved/mr-review:v1.0

          docker run --rm \
            -e OWNER="${CI_PROJECT_NAMESPACE}" \
            -e REPO_NAME="${CI_PROJECT_NAME}" \
            -e COMMIT_SHA="${CI_COMMIT_SHA}" \
            -e MR_NUMBER="${CI_MERGE_REQUEST_IID}" \
            -e EVENT_NAME="${CI_PIPELINE_SOURCE}" \
            -e ACTION="${CI_JOB_NAME}" \
            -e PRIVATE_TOKEN="${GITLAB_PRIVATE_TOKEN}" \
            arshikjaved/mr-review:v1.0 sh -c "python /app/generate_response.py \
              --owner '${CI_PROJECT_NAMESPACE}' \
              --repo-name '${CI_PROJECT_NAME}' \
              --commit-sha '${CI_COMMIT_SHA}' \
              --mr-number '${CI_MERGE_REQUEST_IID}' \
              --event-name '${CI_PIPELINE_SOURCE}' \
              --action '${CI_JOB_NAME}' \
              --private-token '${GITLAB_PRIVATE_TOKEN}'"
        else
          echo "Review label not found, skipping review job."
        fi

      elif [ "$CI_PIPELINE_SOURCE" = "trigger" ]; then
        echo "Pipeline triggered by API. Running interactive clarification job..."

        if [ -z "$COMMIT_ID" ]; then
          echo "COMMIT_ID is not set. Skipping interactive clarification job."
    
        else
          docker run --rm \
            -e COMMIT_ID="$COMMIT_ID" \
            -e NOTE_CONTENT="$NOTE_CONTENT" \
            -e NOTE_ID="$NOTE_ID" \
            -e DISCUSSION_ID="$DISCUSSION_ID" \
            -e MR_NUMBER="${CI_MERGE_REQUEST_IID}" \
            -e PROJECT_ID="${CI_PROJECT_ID}" \
            arshikjaved/mr-review:v1.0 sh -c "python /app/reply_thread.py \
              --commit-id '$COMMIT_ID' \
              --note-content '$NOTE_CONTENT' \
              --note-id '$NOTE_ID' \
              --discussion-id '$DISCUSSION_ID' \
              --mr-number '${CI_MERGE_REQUEST_IID}' \
              --project-id '${CI_PROJECT_ID}'"

        fi

      else
        echo "Pipeline source is not supported, skipping job."
      fi

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_COMMIT_BRANCH'
      when: always